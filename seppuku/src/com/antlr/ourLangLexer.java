// Generated from ourLang.g4 by ANTLR 4.5
package com.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ourLangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		IMPORT=32, IF=33, ELSE=34, WHILE=35, FOR=36, PFOR=37, MATRIX=38, VECTOR=39, 
		INT=40, INTNUM=41, FLOAT=42, FLOATNUM=43, BOOL=44, BOOLVAL=45, VOID=46, 
		STRING=47, SIGN=48, PRINT=49, COMPLEXTOFILE=50, FILETOCOMPLEX=51, ID=52, 
		LIBRARY=53, WS=54, NL=55, COMMENT=56, LINE_COMMENT=57;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "IMPORT", "IF", 
		"ELSE", "WHILE", "FOR", "PFOR", "MATRIX", "VECTOR", "INT", "INTNUM", "FLOAT", 
		"FLOATNUM", "BOOL", "BOOLVAL", "VOID", "STRING", "SIGN", "PRINT", "COMPLEXTOFILE", 
		"FILETOCOMPLEX", "ID", "LIBRARY", "WS", "NL", "COMMENT", "LINE_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'<'", "'>'", "'('", "')'", "'{'", "'}'", "'&&'", "'||'", 
		"'=='", "'!='", "'return'", "','", "'^'", "'*'", "'/'", "'%'", "'#'", 
		"'+'", "'='", "'['", "']'", "'++'", "'--'", "'^T'", "'+='", "'-='", "'*='", 
		"'/='", "'<='", "'>='", null, "'if'", "'else'", "'while'", "'for'", "'pfor'", 
		"'matrix'", "'vector'", null, null, null, null, "'bool'", null, "'void'", 
		null, "'-'", "'print'", "'matrixToFile'", "'fileToMatrix'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "IMPORT", "IF", "ELSE", 
		"WHILE", "FOR", "PFOR", "MATRIX", "VECTOR", "INT", "INTNUM", "FLOAT", 
		"FLOATNUM", "BOOL", "BOOLVAL", "VOID", "STRING", "SIGN", "PRINT", "COMPLEXTOFILE", 
		"FILETOCOMPLEX", "ID", "LIBRARY", "WS", "NL", "COMMENT", "LINE_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ourLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ourLang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2;\u01be\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\3\2\3\2\3\3\3\3\3"+
		"\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3"+
		"\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3"+
		"\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3"+
		"\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3"+
		"\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3"+
		"!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\5!\u00d3\n!\3\"\3\"\3\"\3#\3#\3"+
		"#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3"+
		")\3)\3)\3)\3)\3)\5)\u010c\n)\3*\3*\5*\u0110\n*\3*\3*\7*\u0114\n*\f*\16"+
		"*\u0117\13*\5*\u0119\n*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3"+
		"+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\5+\u0135\n+\3,\5,\u0138\n,\3,\3,\7,\u013c"+
		"\n,\f,\16,\u013f\13,\3,\5,\u0142\n,\3,\3,\7,\u0146\n,\f,\16,\u0149\13"+
		",\3,\3,\5,\u014d\n,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3.\5.\u015d"+
		"\n.\3/\3/\3/\3/\3/\3\60\3\60\7\60\u0166\n\60\f\60\16\60\u0169\13\60\3"+
		"\60\3\60\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3"+
		"\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3"+
		"\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65\7\65\u0191\n\65\f\65"+
		"\16\65\u0194\13\65\3\66\6\66\u0197\n\66\r\66\16\66\u0198\3\67\6\67\u019c"+
		"\n\67\r\67\16\67\u019d\3\67\3\67\38\38\38\38\39\39\39\39\79\u01aa\n9\f"+
		"9\169\u01ad\139\39\39\39\39\39\3:\3:\3:\3:\7:\u01b8\n:\f:\16:\u01bb\13"+
		":\3:\3:\4\u0167\u01ab\2;\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62"+
		"c\63e\64g\65i\66k\67m8o9q:s;\3\2\n\3\2\63;\3\2\62;\5\2C\\aac|\6\2\62;"+
		"C\\aac|\b\2))\60;C\\^^aac|\4\2\13\13\"\"\6\2\f\f\17\17\"\"~~\4\2\f\f\17"+
		"\17\u01d3\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2"+
		"\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2"+
		"\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3u\3\2\2\2\5w\3\2\2\2\7y"+
		"\3\2\2\2\t{\3\2\2\2\13}\3\2\2\2\r\177\3\2\2\2\17\u0081\3\2\2\2\21\u0083"+
		"\3\2\2\2\23\u0086\3\2\2\2\25\u0089\3\2\2\2\27\u008c\3\2\2\2\31\u008f\3"+
		"\2\2\2\33\u0096\3\2\2\2\35\u0098\3\2\2\2\37\u009a\3\2\2\2!\u009c\3\2\2"+
		"\2#\u009e\3\2\2\2%\u00a0\3\2\2\2\'\u00a2\3\2\2\2)\u00a4\3\2\2\2+\u00a6"+
		"\3\2\2\2-\u00a8\3\2\2\2/\u00aa\3\2\2\2\61\u00ad\3\2\2\2\63\u00b0\3\2\2"+
		"\2\65\u00b3\3\2\2\2\67\u00b6\3\2\2\29\u00b9\3\2\2\2;\u00bc\3\2\2\2=\u00bf"+
		"\3\2\2\2?\u00c2\3\2\2\2A\u00d2\3\2\2\2C\u00d4\3\2\2\2E\u00d7\3\2\2\2G"+
		"\u00dc\3\2\2\2I\u00e2\3\2\2\2K\u00e6\3\2\2\2M\u00eb\3\2\2\2O\u00f2\3\2"+
		"\2\2Q\u010b\3\2\2\2S\u0118\3\2\2\2U\u0134\3\2\2\2W\u0137\3\2\2\2Y\u014e"+
		"\3\2\2\2[\u015c\3\2\2\2]\u015e\3\2\2\2_\u0163\3\2\2\2a\u016c\3\2\2\2c"+
		"\u016e\3\2\2\2e\u0174\3\2\2\2g\u0181\3\2\2\2i\u018e\3\2\2\2k\u0196\3\2"+
		"\2\2m\u019b\3\2\2\2o\u01a1\3\2\2\2q\u01a5\3\2\2\2s\u01b3\3\2\2\2uv\7="+
		"\2\2v\4\3\2\2\2wx\7>\2\2x\6\3\2\2\2yz\7@\2\2z\b\3\2\2\2{|\7*\2\2|\n\3"+
		"\2\2\2}~\7+\2\2~\f\3\2\2\2\177\u0080\7}\2\2\u0080\16\3\2\2\2\u0081\u0082"+
		"\7\177\2\2\u0082\20\3\2\2\2\u0083\u0084\7(\2\2\u0084\u0085\7(\2\2\u0085"+
		"\22\3\2\2\2\u0086\u0087\7~\2\2\u0087\u0088\7~\2\2\u0088\24\3\2\2\2\u0089"+
		"\u008a\7?\2\2\u008a\u008b\7?\2\2\u008b\26\3\2\2\2\u008c\u008d\7#\2\2\u008d"+
		"\u008e\7?\2\2\u008e\30\3\2\2\2\u008f\u0090\7t\2\2\u0090\u0091\7g\2\2\u0091"+
		"\u0092\7v\2\2\u0092\u0093\7w\2\2\u0093\u0094\7t\2\2\u0094\u0095\7p\2\2"+
		"\u0095\32\3\2\2\2\u0096\u0097\7.\2\2\u0097\34\3\2\2\2\u0098\u0099\7`\2"+
		"\2\u0099\36\3\2\2\2\u009a\u009b\7,\2\2\u009b \3\2\2\2\u009c\u009d\7\61"+
		"\2\2\u009d\"\3\2\2\2\u009e\u009f\7\'\2\2\u009f$\3\2\2\2\u00a0\u00a1\7"+
		"%\2\2\u00a1&\3\2\2\2\u00a2\u00a3\7-\2\2\u00a3(\3\2\2\2\u00a4\u00a5\7?"+
		"\2\2\u00a5*\3\2\2\2\u00a6\u00a7\7]\2\2\u00a7,\3\2\2\2\u00a8\u00a9\7_\2"+
		"\2\u00a9.\3\2\2\2\u00aa\u00ab\7-\2\2\u00ab\u00ac\7-\2\2\u00ac\60\3\2\2"+
		"\2\u00ad\u00ae\7/\2\2\u00ae\u00af\7/\2\2\u00af\62\3\2\2\2\u00b0\u00b1"+
		"\7`\2\2\u00b1\u00b2\7V\2\2\u00b2\64\3\2\2\2\u00b3\u00b4\7-\2\2\u00b4\u00b5"+
		"\7?\2\2\u00b5\66\3\2\2\2\u00b6\u00b7\7/\2\2\u00b7\u00b8\7?\2\2\u00b88"+
		"\3\2\2\2\u00b9\u00ba\7,\2\2\u00ba\u00bb\7?\2\2\u00bb:\3\2\2\2\u00bc\u00bd"+
		"\7\61\2\2\u00bd\u00be\7?\2\2\u00be<\3\2\2\2\u00bf\u00c0\7>\2\2\u00c0\u00c1"+
		"\7?\2\2\u00c1>\3\2\2\2\u00c2\u00c3\7@\2\2\u00c3\u00c4\7?\2\2\u00c4@\3"+
		"\2\2\2\u00c5\u00c6\7k\2\2\u00c6\u00c7\7p\2\2\u00c7\u00c8\7e\2\2\u00c8"+
		"\u00c9\7n\2\2\u00c9\u00ca\7w\2\2\u00ca\u00cb\7f\2\2\u00cb\u00d3\7g\2\2"+
		"\u00cc\u00cd\7k\2\2\u00cd\u00ce\7o\2\2\u00ce\u00cf\7r\2\2\u00cf\u00d0"+
		"\7q\2\2\u00d0\u00d1\7t\2\2\u00d1\u00d3\7v\2\2\u00d2\u00c5\3\2\2\2\u00d2"+
		"\u00cc\3\2\2\2\u00d3B\3\2\2\2\u00d4\u00d5\7k\2\2\u00d5\u00d6\7h\2\2\u00d6"+
		"D\3\2\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9\7n\2\2\u00d9\u00da\7u\2\2\u00da"+
		"\u00db\7g\2\2\u00dbF\3\2\2\2\u00dc\u00dd\7y\2\2\u00dd\u00de\7j\2\2\u00de"+
		"\u00df\7k\2\2\u00df\u00e0\7n\2\2\u00e0\u00e1\7g\2\2\u00e1H\3\2\2\2\u00e2"+
		"\u00e3\7h\2\2\u00e3\u00e4\7q\2\2\u00e4\u00e5\7t\2\2\u00e5J\3\2\2\2\u00e6"+
		"\u00e7\7r\2\2\u00e7\u00e8\7h\2\2\u00e8\u00e9\7q\2\2\u00e9\u00ea\7t\2\2"+
		"\u00eaL\3\2\2\2\u00eb\u00ec\7o\2\2\u00ec\u00ed\7c\2\2\u00ed\u00ee\7v\2"+
		"\2\u00ee\u00ef\7t\2\2\u00ef\u00f0\7k\2\2\u00f0\u00f1\7z\2\2\u00f1N\3\2"+
		"\2\2\u00f2\u00f3\7x\2\2\u00f3\u00f4\7g\2\2\u00f4\u00f5\7e\2\2\u00f5\u00f6"+
		"\7v\2\2\u00f6\u00f7\7q\2\2\u00f7\u00f8\7t\2\2\u00f8P\3\2\2\2\u00f9\u00fa"+
		"\7k\2\2\u00fa\u00fb\7p\2\2\u00fb\u010c\7v\2\2\u00fc\u00fd\7k\2\2\u00fd"+
		"\u00fe\7p\2\2\u00fe\u00ff\7v\2\2\u00ff\u0100\7\63\2\2\u0100\u010c\78\2"+
		"\2\u0101\u0102\7k\2\2\u0102\u0103\7p\2\2\u0103\u0104\7v\2\2\u0104\u0105"+
		"\7\65\2\2\u0105\u010c\7\64\2\2\u0106\u0107\7k\2\2\u0107\u0108\7p\2\2\u0108"+
		"\u0109\7v\2\2\u0109\u010a\78\2\2\u010a\u010c\7\66\2\2\u010b\u00f9\3\2"+
		"\2\2\u010b\u00fc\3\2\2\2\u010b\u0101\3\2\2\2\u010b\u0106\3\2\2\2\u010c"+
		"R\3\2\2\2\u010d\u0119\7\62\2\2\u010e\u0110\5a\61\2\u010f\u010e\3\2\2\2"+
		"\u010f\u0110\3\2\2\2\u0110\u0111\3\2\2\2\u0111\u0115\t\2\2\2\u0112\u0114"+
		"\t\3\2\2\u0113\u0112\3\2\2\2\u0114\u0117\3\2\2\2\u0115\u0113\3\2\2\2\u0115"+
		"\u0116\3\2\2\2\u0116\u0119\3\2\2\2\u0117\u0115\3\2\2\2\u0118\u010d\3\2"+
		"\2\2\u0118\u010f\3\2\2\2\u0119T\3\2\2\2\u011a\u011b\7h\2\2\u011b\u011c"+
		"\7n\2\2\u011c\u011d\7q\2\2\u011d\u011e\7c\2\2\u011e\u0135\7v\2\2\u011f"+
		"\u0120\7h\2\2\u0120\u0121\7n\2\2\u0121\u0122\7q\2\2\u0122\u0123\7c\2\2"+
		"\u0123\u0124\7v\2\2\u0124\u0125\7\63\2\2\u0125\u0135\78\2\2\u0126\u0127"+
		"\7h\2\2\u0127\u0128\7n\2\2\u0128\u0129\7q\2\2\u0129\u012a\7c\2\2\u012a"+
		"\u012b\7v\2\2\u012b\u012c\7\65\2\2\u012c\u0135\7\64\2\2\u012d\u012e\7"+
		"h\2\2\u012e\u012f\7n\2\2\u012f\u0130\7q\2\2\u0130\u0131\7c\2\2\u0131\u0132"+
		"\7v\2\2\u0132\u0133\78\2\2\u0133\u0135\7\66\2\2\u0134\u011a\3\2\2\2\u0134"+
		"\u011f\3\2\2\2\u0134\u0126\3\2\2\2\u0134\u012d\3\2\2\2\u0135V\3\2\2\2"+
		"\u0136\u0138\5a\61\2\u0137\u0136\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u0141"+
		"\3\2\2\2\u0139\u013d\t\2\2\2\u013a\u013c\t\3\2\2\u013b\u013a\3\2\2\2\u013c"+
		"\u013f\3\2\2\2\u013d\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u0142\3\2"+
		"\2\2\u013f\u013d\3\2\2\2\u0140\u0142\7\62\2\2\u0141\u0139\3\2\2\2\u0141"+
		"\u0140\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u014c\7\60\2\2\u0144\u0146\t"+
		"\3\2\2\u0145\u0144\3\2\2\2\u0146\u0149\3\2\2\2\u0147\u0145\3\2\2\2\u0147"+
		"\u0148\3\2\2\2\u0148\u014a\3\2\2\2\u0149\u0147\3\2\2\2\u014a\u014d\t\2"+
		"\2\2\u014b\u014d\7\62\2\2\u014c\u0147\3\2\2\2\u014c\u014b\3\2\2\2\u014d"+
		"X\3\2\2\2\u014e\u014f\7d\2\2\u014f\u0150\7q\2\2\u0150\u0151\7q\2\2\u0151"+
		"\u0152\7n\2\2\u0152Z\3\2\2\2\u0153\u0154\7v\2\2\u0154\u0155\7t\2\2\u0155"+
		"\u0156\7w\2\2\u0156\u015d\7g\2\2\u0157\u0158\7h\2\2\u0158\u0159\7c\2\2"+
		"\u0159\u015a\7n\2\2\u015a\u015b\7u\2\2\u015b\u015d\7g\2\2\u015c\u0153"+
		"\3\2\2\2\u015c\u0157\3\2\2\2\u015d\\\3\2\2\2\u015e\u015f\7x\2\2\u015f"+
		"\u0160\7q\2\2\u0160\u0161\7k\2\2\u0161\u0162\7f\2\2\u0162^\3\2\2\2\u0163"+
		"\u0167\7$\2\2\u0164\u0166\13\2\2\2\u0165\u0164\3\2\2\2\u0166\u0169\3\2"+
		"\2\2\u0167\u0168\3\2\2\2\u0167\u0165\3\2\2\2\u0168\u016a\3\2\2\2\u0169"+
		"\u0167\3\2\2\2\u016a\u016b\7$\2\2\u016b`\3\2\2\2\u016c\u016d\7/\2\2\u016d"+
		"b\3\2\2\2\u016e\u016f\7r\2\2\u016f\u0170\7t\2\2\u0170\u0171\7k\2\2\u0171"+
		"\u0172\7p\2\2\u0172\u0173\7v\2\2\u0173d\3\2\2\2\u0174\u0175\7o\2\2\u0175"+
		"\u0176\7c\2\2\u0176\u0177\7v\2\2\u0177\u0178\7t\2\2\u0178\u0179\7k\2\2"+
		"\u0179\u017a\7z\2\2\u017a\u017b\7V\2\2\u017b\u017c\7q\2\2\u017c\u017d"+
		"\7H\2\2\u017d\u017e\7k\2\2\u017e\u017f\7n\2\2\u017f\u0180\7g\2\2\u0180"+
		"f\3\2\2\2\u0181\u0182\7h\2\2\u0182\u0183\7k\2\2\u0183\u0184\7n\2\2\u0184"+
		"\u0185\7g\2\2\u0185\u0186\7V\2\2\u0186\u0187\7q\2\2\u0187\u0188\7O\2\2"+
		"\u0188\u0189\7c\2\2\u0189\u018a\7v\2\2\u018a\u018b\7t\2\2\u018b\u018c"+
		"\7k\2\2\u018c\u018d\7z\2\2\u018dh\3\2\2\2\u018e\u0192\t\4\2\2\u018f\u0191"+
		"\t\5\2\2\u0190\u018f\3\2\2\2\u0191\u0194\3\2\2\2\u0192\u0190\3\2\2\2\u0192"+
		"\u0193\3\2\2\2\u0193j\3\2\2\2\u0194\u0192\3\2\2\2\u0195\u0197\t\6\2\2"+
		"\u0196\u0195\3\2\2\2\u0197\u0198\3\2\2\2\u0198\u0196\3\2\2\2\u0198\u0199"+
		"\3\2\2\2\u0199l\3\2\2\2\u019a\u019c\t\7\2\2\u019b\u019a\3\2\2\2\u019c"+
		"\u019d\3\2\2\2\u019d\u019b\3\2\2\2\u019d\u019e\3\2\2\2\u019e\u019f\3\2"+
		"\2\2\u019f\u01a0\b\67\2\2\u01a0n\3\2\2\2\u01a1\u01a2\t\b\2\2\u01a2\u01a3"+
		"\3\2\2\2\u01a3\u01a4\b8\2\2\u01a4p\3\2\2\2\u01a5\u01a6\7\61\2\2\u01a6"+
		"\u01a7\7,\2\2\u01a7\u01ab\3\2\2\2\u01a8\u01aa\13\2\2\2\u01a9\u01a8\3\2"+
		"\2\2\u01aa\u01ad\3\2\2\2\u01ab\u01ac\3\2\2\2\u01ab\u01a9\3\2\2\2\u01ac"+
		"\u01ae\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ae\u01af\7,\2\2\u01af\u01b0\7\61"+
		"\2\2\u01b0\u01b1\3\2\2\2\u01b1\u01b2\b9\2\2\u01b2r\3\2\2\2\u01b3\u01b4"+
		"\7\61\2\2\u01b4\u01b5\7\61\2\2\u01b5\u01b9\3\2\2\2\u01b6\u01b8\n\t\2\2"+
		"\u01b7\u01b6\3\2\2\2\u01b8\u01bb\3\2\2\2\u01b9\u01b7\3\2\2\2\u01b9\u01ba"+
		"\3\2\2\2\u01ba\u01bc\3\2\2\2\u01bb\u01b9\3\2\2\2\u01bc\u01bd\b:\2\2\u01bd"+
		"t\3\2\2\2\25\2\u00d2\u010b\u010f\u0115\u0118\u0134\u0137\u013d\u0141\u0147"+
		"\u014c\u015c\u0167\u0192\u0198\u019d\u01ab\u01b9\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}