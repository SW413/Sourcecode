// Generated from ourLang.g4 by ANTLR 4.5
package com.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ourLangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, IMPORT=31, 
		IF=32, ELSE=33, WHILE=34, FOR=35, PFOR=36, MATRIX=37, VECTOR=38, INT=39, 
		INTNUM=40, FLOAT=41, FLOATNUM=42, BOOL=43, BOOLVAL=44, VOID=45, STRING=46, 
		SIGN=47, PRINT=48, COMPLEXTOFILE=49, FILETOCOMPLEX=50, ID=51, LIBRARY=52, 
		WS=53, NL=54, COMMENT=55, LINE_COMMENT=56;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "IMPORT", "IF", "ELSE", "WHILE", 
		"FOR", "PFOR", "MATRIX", "VECTOR", "INT", "INTNUM", "FLOAT", "FLOATNUM", 
		"BOOL", "BOOLVAL", "VOID", "STRING", "SIGN", "PRINT", "COMPLEXTOFILE", 
		"FILETOCOMPLEX", "ID", "LIBRARY", "WS", "NL", "COMMENT", "LINE_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'<'", "'>'", "'('", "')'", "'{'", "'}'", "'&&'", "'||'", 
		"'=='", "'!='", "'return'", "','", "'*'", "'/'", "'%'", "'#'", "'+'", 
		"'='", "'['", "']'", "'++'", "'--'", "'^'", "'+='", "'-='", "'*='", "'/='", 
		"'<='", "'>='", null, "'if'", "'else'", "'while'", "'for'", "'pfor'", 
		"'matrix'", "'vector'", null, null, null, null, "'bool'", null, "'void'", 
		null, "'-'", "'print'", "'matrixToFile'", "'fileToMatrix'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "IMPORT", "IF", "ELSE", "WHILE", 
		"FOR", "PFOR", "MATRIX", "VECTOR", "INT", "INTNUM", "FLOAT", "FLOATNUM", 
		"BOOL", "BOOLVAL", "VOID", "STRING", "SIGN", "PRINT", "COMPLEXTOFILE", 
		"FILETOCOMPLEX", "ID", "LIBRARY", "WS", "NL", "COMMENT", "LINE_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ourLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ourLang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2:\u01b9\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3\2\3\3\3\3\3\4\3\4"+
		"\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13"+
		"\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20"+
		"\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27"+
		"\3\27\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34"+
		"\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3"+
		" \3 \3 \3 \3 \3 \3 \5 \u00ce\n \3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#"+
		"\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'"+
		"\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		"(\5(\u0107\n(\3)\3)\5)\u010b\n)\3)\3)\7)\u010f\n)\f)\16)\u0112\13)\5)"+
		"\u0114\n)\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*"+
		"\3*\3*\3*\3*\3*\3*\5*\u0130\n*\3+\5+\u0133\n+\3+\3+\7+\u0137\n+\f+\16"+
		"+\u013a\13+\3+\5+\u013d\n+\3+\3+\7+\u0141\n+\f+\16+\u0144\13+\3+\3+\5"+
		"+\u0148\n+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u0158\n-\3.\3"+
		".\3.\3.\3.\3/\3/\7/\u0161\n/\f/\16/\u0164\13/\3/\3/\3\60\3\60\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63"+
		"\3\63\3\63\3\64\3\64\7\64\u018c\n\64\f\64\16\64\u018f\13\64\3\65\6\65"+
		"\u0192\n\65\r\65\16\65\u0193\3\66\6\66\u0197\n\66\r\66\16\66\u0198\3\66"+
		"\3\66\3\67\3\67\3\67\3\67\38\38\38\38\78\u01a5\n8\f8\168\u01a8\138\38"+
		"\38\38\38\38\39\39\39\39\79\u01b3\n9\f9\169\u01b6\139\39\39\4\u0162\u01a6"+
		"\2:\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67"+
		"m8o9q:\3\2\n\3\2\63;\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\b\2))\60;C\\^^"+
		"aac|\4\2\13\13\"\"\6\2\f\f\17\17\"\"~~\4\2\f\f\17\17\u01ce\2\3\3\2\2\2"+
		"\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2"+
		"\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2"+
		"\2q\3\2\2\2\3s\3\2\2\2\5u\3\2\2\2\7w\3\2\2\2\ty\3\2\2\2\13{\3\2\2\2\r"+
		"}\3\2\2\2\17\177\3\2\2\2\21\u0081\3\2\2\2\23\u0084\3\2\2\2\25\u0087\3"+
		"\2\2\2\27\u008a\3\2\2\2\31\u008d\3\2\2\2\33\u0094\3\2\2\2\35\u0096\3\2"+
		"\2\2\37\u0098\3\2\2\2!\u009a\3\2\2\2#\u009c\3\2\2\2%\u009e\3\2\2\2\'\u00a0"+
		"\3\2\2\2)\u00a2\3\2\2\2+\u00a4\3\2\2\2-\u00a6\3\2\2\2/\u00a9\3\2\2\2\61"+
		"\u00ac\3\2\2\2\63\u00ae\3\2\2\2\65\u00b1\3\2\2\2\67\u00b4\3\2\2\29\u00b7"+
		"\3\2\2\2;\u00ba\3\2\2\2=\u00bd\3\2\2\2?\u00cd\3\2\2\2A\u00cf\3\2\2\2C"+
		"\u00d2\3\2\2\2E\u00d7\3\2\2\2G\u00dd\3\2\2\2I\u00e1\3\2\2\2K\u00e6\3\2"+
		"\2\2M\u00ed\3\2\2\2O\u0106\3\2\2\2Q\u0113\3\2\2\2S\u012f\3\2\2\2U\u0132"+
		"\3\2\2\2W\u0149\3\2\2\2Y\u0157\3\2\2\2[\u0159\3\2\2\2]\u015e\3\2\2\2_"+
		"\u0167\3\2\2\2a\u0169\3\2\2\2c\u016f\3\2\2\2e\u017c\3\2\2\2g\u0189\3\2"+
		"\2\2i\u0191\3\2\2\2k\u0196\3\2\2\2m\u019c\3\2\2\2o\u01a0\3\2\2\2q\u01ae"+
		"\3\2\2\2st\7=\2\2t\4\3\2\2\2uv\7>\2\2v\6\3\2\2\2wx\7@\2\2x\b\3\2\2\2y"+
		"z\7*\2\2z\n\3\2\2\2{|\7+\2\2|\f\3\2\2\2}~\7}\2\2~\16\3\2\2\2\177\u0080"+
		"\7\177\2\2\u0080\20\3\2\2\2\u0081\u0082\7(\2\2\u0082\u0083\7(\2\2\u0083"+
		"\22\3\2\2\2\u0084\u0085\7~\2\2\u0085\u0086\7~\2\2\u0086\24\3\2\2\2\u0087"+
		"\u0088\7?\2\2\u0088\u0089\7?\2\2\u0089\26\3\2\2\2\u008a\u008b\7#\2\2\u008b"+
		"\u008c\7?\2\2\u008c\30\3\2\2\2\u008d\u008e\7t\2\2\u008e\u008f\7g\2\2\u008f"+
		"\u0090\7v\2\2\u0090\u0091\7w\2\2\u0091\u0092\7t\2\2\u0092\u0093\7p\2\2"+
		"\u0093\32\3\2\2\2\u0094\u0095\7.\2\2\u0095\34\3\2\2\2\u0096\u0097\7,\2"+
		"\2\u0097\36\3\2\2\2\u0098\u0099\7\61\2\2\u0099 \3\2\2\2\u009a\u009b\7"+
		"\'\2\2\u009b\"\3\2\2\2\u009c\u009d\7%\2\2\u009d$\3\2\2\2\u009e\u009f\7"+
		"-\2\2\u009f&\3\2\2\2\u00a0\u00a1\7?\2\2\u00a1(\3\2\2\2\u00a2\u00a3\7]"+
		"\2\2\u00a3*\3\2\2\2\u00a4\u00a5\7_\2\2\u00a5,\3\2\2\2\u00a6\u00a7\7-\2"+
		"\2\u00a7\u00a8\7-\2\2\u00a8.\3\2\2\2\u00a9\u00aa\7/\2\2\u00aa\u00ab\7"+
		"/\2\2\u00ab\60\3\2\2\2\u00ac\u00ad\7`\2\2\u00ad\62\3\2\2\2\u00ae\u00af"+
		"\7-\2\2\u00af\u00b0\7?\2\2\u00b0\64\3\2\2\2\u00b1\u00b2\7/\2\2\u00b2\u00b3"+
		"\7?\2\2\u00b3\66\3\2\2\2\u00b4\u00b5\7,\2\2\u00b5\u00b6\7?\2\2\u00b68"+
		"\3\2\2\2\u00b7\u00b8\7\61\2\2\u00b8\u00b9\7?\2\2\u00b9:\3\2\2\2\u00ba"+
		"\u00bb\7>\2\2\u00bb\u00bc\7?\2\2\u00bc<\3\2\2\2\u00bd\u00be\7@\2\2\u00be"+
		"\u00bf\7?\2\2\u00bf>\3\2\2\2\u00c0\u00c1\7k\2\2\u00c1\u00c2\7p\2\2\u00c2"+
		"\u00c3\7e\2\2\u00c3\u00c4\7n\2\2\u00c4\u00c5\7w\2\2\u00c5\u00c6\7f\2\2"+
		"\u00c6\u00ce\7g\2\2\u00c7\u00c8\7k\2\2\u00c8\u00c9\7o\2\2\u00c9\u00ca"+
		"\7r\2\2\u00ca\u00cb\7q\2\2\u00cb\u00cc\7t\2\2\u00cc\u00ce\7v\2\2\u00cd"+
		"\u00c0\3\2\2\2\u00cd\u00c7\3\2\2\2\u00ce@\3\2\2\2\u00cf\u00d0\7k\2\2\u00d0"+
		"\u00d1\7h\2\2\u00d1B\3\2\2\2\u00d2\u00d3\7g\2\2\u00d3\u00d4\7n\2\2\u00d4"+
		"\u00d5\7u\2\2\u00d5\u00d6\7g\2\2\u00d6D\3\2\2\2\u00d7\u00d8\7y\2\2\u00d8"+
		"\u00d9\7j\2\2\u00d9\u00da\7k\2\2\u00da\u00db\7n\2\2\u00db\u00dc\7g\2\2"+
		"\u00dcF\3\2\2\2\u00dd\u00de\7h\2\2\u00de\u00df\7q\2\2\u00df\u00e0\7t\2"+
		"\2\u00e0H\3\2\2\2\u00e1\u00e2\7r\2\2\u00e2\u00e3\7h\2\2\u00e3\u00e4\7"+
		"q\2\2\u00e4\u00e5\7t\2\2\u00e5J\3\2\2\2\u00e6\u00e7\7o\2\2\u00e7\u00e8"+
		"\7c\2\2\u00e8\u00e9\7v\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb\7k\2\2\u00eb"+
		"\u00ec\7z\2\2\u00ecL\3\2\2\2\u00ed\u00ee\7x\2\2\u00ee\u00ef\7g\2\2\u00ef"+
		"\u00f0\7e\2\2\u00f0\u00f1\7v\2\2\u00f1\u00f2\7q\2\2\u00f2\u00f3\7t\2\2"+
		"\u00f3N\3\2\2\2\u00f4\u00f5\7k\2\2\u00f5\u00f6\7p\2\2\u00f6\u0107\7v\2"+
		"\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7p\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb"+
		"\7\63\2\2\u00fb\u0107\78\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe\7p\2\2\u00fe"+
		"\u00ff\7v\2\2\u00ff\u0100\7\65\2\2\u0100\u0107\7\64\2\2\u0101\u0102\7"+
		"k\2\2\u0102\u0103\7p\2\2\u0103\u0104\7v\2\2\u0104\u0105\78\2\2\u0105\u0107"+
		"\7\66\2\2\u0106\u00f4\3\2\2\2\u0106\u00f7\3\2\2\2\u0106\u00fc\3\2\2\2"+
		"\u0106\u0101\3\2\2\2\u0107P\3\2\2\2\u0108\u0114\7\62\2\2\u0109\u010b\5"+
		"_\60\2\u010a\u0109\3\2\2\2\u010a\u010b\3\2\2\2\u010b\u010c\3\2\2\2\u010c"+
		"\u0110\t\2\2\2\u010d\u010f\t\3\2\2\u010e\u010d\3\2\2\2\u010f\u0112\3\2"+
		"\2\2\u0110\u010e\3\2\2\2\u0110\u0111\3\2\2\2\u0111\u0114\3\2\2\2\u0112"+
		"\u0110\3\2\2\2\u0113\u0108\3\2\2\2\u0113\u010a\3\2\2\2\u0114R\3\2\2\2"+
		"\u0115\u0116\7h\2\2\u0116\u0117\7n\2\2\u0117\u0118\7q\2\2\u0118\u0119"+
		"\7c\2\2\u0119\u0130\7v\2\2\u011a\u011b\7h\2\2\u011b\u011c\7n\2\2\u011c"+
		"\u011d\7q\2\2\u011d\u011e\7c\2\2\u011e\u011f\7v\2\2\u011f\u0120\7\63\2"+
		"\2\u0120\u0130\78\2\2\u0121\u0122\7h\2\2\u0122\u0123\7n\2\2\u0123\u0124"+
		"\7q\2\2\u0124\u0125\7c\2\2\u0125\u0126\7v\2\2\u0126\u0127\7\65\2\2\u0127"+
		"\u0130\7\64\2\2\u0128\u0129\7h\2\2\u0129\u012a\7n\2\2\u012a\u012b\7q\2"+
		"\2\u012b\u012c\7c\2\2\u012c\u012d\7v\2\2\u012d\u012e\78\2\2\u012e\u0130"+
		"\7\66\2\2\u012f\u0115\3\2\2\2\u012f\u011a\3\2\2\2\u012f\u0121\3\2\2\2"+
		"\u012f\u0128\3\2\2\2\u0130T\3\2\2\2\u0131\u0133\5_\60\2\u0132\u0131\3"+
		"\2\2\2\u0132\u0133\3\2\2\2\u0133\u013c\3\2\2\2\u0134\u0138\t\2\2\2\u0135"+
		"\u0137\t\3\2\2\u0136\u0135\3\2\2\2\u0137\u013a\3\2\2\2\u0138\u0136\3\2"+
		"\2\2\u0138\u0139\3\2\2\2\u0139\u013d\3\2\2\2\u013a\u0138\3\2\2\2\u013b"+
		"\u013d\7\62\2\2\u013c\u0134\3\2\2\2\u013c\u013b\3\2\2\2\u013d\u013e\3"+
		"\2\2\2\u013e\u0147\7\60\2\2\u013f\u0141\t\3\2\2\u0140\u013f\3\2\2\2\u0141"+
		"\u0144\3\2\2\2\u0142\u0140\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0145\3\2"+
		"\2\2\u0144\u0142\3\2\2\2\u0145\u0148\t\2\2\2\u0146\u0148\7\62\2\2\u0147"+
		"\u0142\3\2\2\2\u0147\u0146\3\2\2\2\u0148V\3\2\2\2\u0149\u014a\7d\2\2\u014a"+
		"\u014b\7q\2\2\u014b\u014c\7q\2\2\u014c\u014d\7n\2\2\u014dX\3\2\2\2\u014e"+
		"\u014f\7v\2\2\u014f\u0150\7t\2\2\u0150\u0151\7w\2\2\u0151\u0158\7g\2\2"+
		"\u0152\u0153\7h\2\2\u0153\u0154\7c\2\2\u0154\u0155\7n\2\2\u0155\u0156"+
		"\7u\2\2\u0156\u0158\7g\2\2\u0157\u014e\3\2\2\2\u0157\u0152\3\2\2\2\u0158"+
		"Z\3\2\2\2\u0159\u015a\7x\2\2\u015a\u015b\7q\2\2\u015b\u015c\7k\2\2\u015c"+
		"\u015d\7f\2\2\u015d\\\3\2\2\2\u015e\u0162\7$\2\2\u015f\u0161\13\2\2\2"+
		"\u0160\u015f\3\2\2\2\u0161\u0164\3\2\2\2\u0162\u0163\3\2\2\2\u0162\u0160"+
		"\3\2\2\2\u0163\u0165\3\2\2\2\u0164\u0162\3\2\2\2\u0165\u0166\7$\2\2\u0166"+
		"^\3\2\2\2\u0167\u0168\7/\2\2\u0168`\3\2\2\2\u0169\u016a\7r\2\2\u016a\u016b"+
		"\7t\2\2\u016b\u016c\7k\2\2\u016c\u016d\7p\2\2\u016d\u016e\7v\2\2\u016e"+
		"b\3\2\2\2\u016f\u0170\7o\2\2\u0170\u0171\7c\2\2\u0171\u0172\7v\2\2\u0172"+
		"\u0173\7t\2\2\u0173\u0174\7k\2\2\u0174\u0175\7z\2\2\u0175\u0176\7V\2\2"+
		"\u0176\u0177\7q\2\2\u0177\u0178\7H\2\2\u0178\u0179\7k\2\2\u0179\u017a"+
		"\7n\2\2\u017a\u017b\7g\2\2\u017bd\3\2\2\2\u017c\u017d\7h\2\2\u017d\u017e"+
		"\7k\2\2\u017e\u017f\7n\2\2\u017f\u0180\7g\2\2\u0180\u0181\7V\2\2\u0181"+
		"\u0182\7q\2\2\u0182\u0183\7O\2\2\u0183\u0184\7c\2\2\u0184\u0185\7v\2\2"+
		"\u0185\u0186\7t\2\2\u0186\u0187\7k\2\2\u0187\u0188\7z\2\2\u0188f\3\2\2"+
		"\2\u0189\u018d\t\4\2\2\u018a\u018c\t\5\2\2\u018b\u018a\3\2\2\2\u018c\u018f"+
		"\3\2\2\2\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018eh\3\2\2\2\u018f"+
		"\u018d\3\2\2\2\u0190\u0192\t\6\2\2\u0191\u0190\3\2\2\2\u0192\u0193\3\2"+
		"\2\2\u0193\u0191\3\2\2\2\u0193\u0194\3\2\2\2\u0194j\3\2\2\2\u0195\u0197"+
		"\t\7\2\2\u0196\u0195\3\2\2\2\u0197\u0198\3\2\2\2\u0198\u0196\3\2\2\2\u0198"+
		"\u0199\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019b\b\66\2\2\u019bl\3\2\2\2"+
		"\u019c\u019d\t\b\2\2\u019d\u019e\3\2\2\2\u019e\u019f\b\67\2\2\u019fn\3"+
		"\2\2\2\u01a0\u01a1\7\61\2\2\u01a1\u01a2\7,\2\2\u01a2\u01a6\3\2\2\2\u01a3"+
		"\u01a5\13\2\2\2\u01a4\u01a3\3\2\2\2\u01a5\u01a8\3\2\2\2\u01a6\u01a7\3"+
		"\2\2\2\u01a6\u01a4\3\2\2\2\u01a7\u01a9\3\2\2\2\u01a8\u01a6\3\2\2\2\u01a9"+
		"\u01aa\7,\2\2\u01aa\u01ab\7\61\2\2\u01ab\u01ac\3\2\2\2\u01ac\u01ad\b8"+
		"\2\2\u01adp\3\2\2\2\u01ae\u01af\7\61\2\2\u01af\u01b0\7\61\2\2\u01b0\u01b4"+
		"\3\2\2\2\u01b1\u01b3\n\t\2\2\u01b2\u01b1\3\2\2\2\u01b3\u01b6\3\2\2\2\u01b4"+
		"\u01b2\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5\u01b7\3\2\2\2\u01b6\u01b4\3\2"+
		"\2\2\u01b7\u01b8\b9\2\2\u01b8r\3\2\2\2\25\2\u00cd\u0106\u010a\u0110\u0113"+
		"\u012f\u0132\u0138\u013c\u0142\u0147\u0157\u0162\u018d\u0193\u0198\u01a6"+
		"\u01b4\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}