//You can choose to use libraries containing math functions, or you can write your own containing custom computations.
import <matrix>
 
//Here the program will run
//using a main method, allows the programmer to define their own functions (computations)
main{
	//Dynamically typed
	a = [[1]
		 [0]];
	b = [[1.3] 
	 	 [4.1]];
	
	//Automatic int to float conversion
	//basic math functions build-in	
	c = dot(a, b);
	
	//Easy printing
	print(c);
	print(a);
	//will look like:[ 1
	//    			   0 ]
} 

//The compiler will decide, based upon dependencies, if a given function can be computed on GPU
computation matrixTranspose1(matrix(2x2) a, vector(2) b){
	return [[(a[1,1] * b[1,1] + a[1,2] * b[2,1])]
			[(a[2,1] * b[1,1] + a[2,2] * b[2,1])]];
} 
 

//COMMENTS:

/* 	multi-
	line
	comment  */
	
//Single-line comment


//MATRIX PROPOSALS:
a = [[1, 4, 3], [3, 5, 6], [3, 1, 7]];	 

a = [[1, 4, 35347856575675], 
	 [334343444353, 5, 6], 
	 [3, 33242561, 7]];  
	 
a = [[            1,        4, 35347856575675 ], 
	 [ 334343444353,        5,              6 ], 
	 [            3, 33242561,              7 ]];
	
b = [1, 4, 3 | 3, 5, 6 | 3, 1, 7];

b = [1, 4, 3 | 
	 3, 5, 6 | 
	 3, 1, 7];
	
c = [1 4 3 | 3 5 6 | 3 1 7];

c = [1 4 3 | 
     3 5 6 | 
	 3 1 7]; 
	
d = [[ 1 4 3 ] [ 3 5 6 ] [ 3 1 7 ]];	 

d = [[ 121243345          4            3 ]
     [         3 5545465457            6 ]
	 [         3          1 746456456456 ]]; 	 	 	
