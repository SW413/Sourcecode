// Generated from ourLang.g4 by ANTLR 4.5
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ourLangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, IMPORT=28, IF=29, ELSE=30, WHILE=31, FOR=32, 
		MATRIX=33, ROWVECTOR=34, COLVECTOR=35, INT=36, INTNUM=37, FLOAT=38, FLOATNUM=39, 
		BOOL=40, BOOLVAL=41, STRING=42, SIGN=43, ID=44, LIBRARY=45, PRINT=46, 
		WS=47, NL=48, COMMENT=49, LINE_COMMENT=50;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "IMPORT", "IF", "ELSE", "WHILE", "FOR", "MATRIX", "ROWVECTOR", 
		"COLVECTOR", "INT", "INTNUM", "FLOAT", "FLOATNUM", "BOOL", "BOOLVAL", 
		"STRING", "SIGN", "ID", "LIBRARY", "PRINT", "WS", "NL", "COMMENT", "LINE_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'<'", "'>'", "'('", "')'", "'{'", "'}'", "'void'", "'return'", 
		"','", "'*'", "'/'", "'%'", "'+'", "'='", "'['", "']'", "'++'", "'--'", 
		"'+='", "'-='", "'*='", "'/='", "'=='", "'!='", "'<='", "'>='", null, 
		"'if'", "'else'", "'while'", "'for'", "'matrix'", null, null, null, null, 
		null, null, "'bool'", null, null, "'-'", null, null, "'print'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "IMPORT", "IF", "ELSE", "WHILE", "FOR", "MATRIX", 
		"ROWVECTOR", "COLVECTOR", "INT", "INTNUM", "FLOAT", "FLOATNUM", "BOOL", 
		"BOOLVAL", "STRING", "SIGN", "ID", "LIBRARY", "PRINT", "WS", "NL", "COMMENT", 
		"LINE_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ourLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ourLang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\64\u01a6\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2"+
		"\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3"+
		"\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17"+
		"\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31"+
		"\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\5\35\u00bd\n\35\3\36\3\36\3\36"+
		"\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3"+
		"\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\5#\u00e5\n#\3$\3"+
		"$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\5$\u00f4\n$\3%\3%\3%\3%\3%\3%\3%\3"+
		"%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\5%\u0108\n%\3&\3&\5&\u010c\n&\3&\3&\7"+
		"&\u0110\n&\f&\16&\u0113\13&\5&\u0115\n&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'"+
		"\3\'\5\'\u0131\n\'\3(\3(\3(\3(\5(\u0137\n(\3(\3(\7(\u013b\n(\f(\16(\u013e"+
		"\13(\3(\5(\u0141\n(\3(\3(\7(\u0145\n(\f(\16(\u0148\13(\3(\5(\u014b\n("+
		"\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3*\5*\u015b\n*\3+\3+\7+\u015f"+
		"\n+\f+\16+\u0162\13+\3+\3+\3,\3,\3-\3-\7-\u016a\n-\f-\16-\u016d\13-\3"+
		".\6.\u0170\n.\r.\16.\u0171\3.\5.\u0175\n.\3.\7.\u0178\n.\f.\16.\u017b"+
		"\13.\3/\3/\3/\3/\3/\3/\3\60\6\60\u0184\n\60\r\60\16\60\u0185\3\60\3\60"+
		"\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\7\62\u0192\n\62\f\62\16\62\u0195"+
		"\13\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\7\63\u01a0\n\63\f"+
		"\63\16\63\u01a3\13\63\3\63\3\63\4\u0160\u0193\2\64\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'"+
		"M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64\3\2\t\3\2\63;\3\2\62;\5\2C\\aac|"+
		"\6\2\62;C\\aac|\4\2\13\13\"\"\6\2\f\f\17\17\"\"~~\4\2\f\f\17\17\u01bf"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\3g\3\2\2\2\5i\3\2\2\2\7k\3\2\2\2\tm\3\2\2"+
		"\2\13o\3\2\2\2\rq\3\2\2\2\17s\3\2\2\2\21u\3\2\2\2\23z\3\2\2\2\25\u0081"+
		"\3\2\2\2\27\u0083\3\2\2\2\31\u0085\3\2\2\2\33\u0087\3\2\2\2\35\u0089\3"+
		"\2\2\2\37\u008b\3\2\2\2!\u008d\3\2\2\2#\u008f\3\2\2\2%\u0091\3\2\2\2\'"+
		"\u0094\3\2\2\2)\u0097\3\2\2\2+\u009a\3\2\2\2-\u009d\3\2\2\2/\u00a0\3\2"+
		"\2\2\61\u00a3\3\2\2\2\63\u00a6\3\2\2\2\65\u00a9\3\2\2\2\67\u00ac\3\2\2"+
		"\29\u00bc\3\2\2\2;\u00be\3\2\2\2=\u00c1\3\2\2\2?\u00c6\3\2\2\2A\u00cc"+
		"\3\2\2\2C\u00d0\3\2\2\2E\u00e4\3\2\2\2G\u00f3\3\2\2\2I\u0107\3\2\2\2K"+
		"\u0114\3\2\2\2M\u0130\3\2\2\2O\u014a\3\2\2\2Q\u014c\3\2\2\2S\u015a\3\2"+
		"\2\2U\u015c\3\2\2\2W\u0165\3\2\2\2Y\u0167\3\2\2\2[\u016f\3\2\2\2]\u017c"+
		"\3\2\2\2_\u0183\3\2\2\2a\u0189\3\2\2\2c\u018d\3\2\2\2e\u019b\3\2\2\2g"+
		"h\7=\2\2h\4\3\2\2\2ij\7>\2\2j\6\3\2\2\2kl\7@\2\2l\b\3\2\2\2mn\7*\2\2n"+
		"\n\3\2\2\2op\7+\2\2p\f\3\2\2\2qr\7}\2\2r\16\3\2\2\2st\7\177\2\2t\20\3"+
		"\2\2\2uv\7x\2\2vw\7q\2\2wx\7k\2\2xy\7f\2\2y\22\3\2\2\2z{\7t\2\2{|\7g\2"+
		"\2|}\7v\2\2}~\7w\2\2~\177\7t\2\2\177\u0080\7p\2\2\u0080\24\3\2\2\2\u0081"+
		"\u0082\7.\2\2\u0082\26\3\2\2\2\u0083\u0084\7,\2\2\u0084\30\3\2\2\2\u0085"+
		"\u0086\7\61\2\2\u0086\32\3\2\2\2\u0087\u0088\7\'\2\2\u0088\34\3\2\2\2"+
		"\u0089\u008a\7-\2\2\u008a\36\3\2\2\2\u008b\u008c\7?\2\2\u008c \3\2\2\2"+
		"\u008d\u008e\7]\2\2\u008e\"\3\2\2\2\u008f\u0090\7_\2\2\u0090$\3\2\2\2"+
		"\u0091\u0092\7-\2\2\u0092\u0093\7-\2\2\u0093&\3\2\2\2\u0094\u0095\7/\2"+
		"\2\u0095\u0096\7/\2\2\u0096(\3\2\2\2\u0097\u0098\7-\2\2\u0098\u0099\7"+
		"?\2\2\u0099*\3\2\2\2\u009a\u009b\7/\2\2\u009b\u009c\7?\2\2\u009c,\3\2"+
		"\2\2\u009d\u009e\7,\2\2\u009e\u009f\7?\2\2\u009f.\3\2\2\2\u00a0\u00a1"+
		"\7\61\2\2\u00a1\u00a2\7?\2\2\u00a2\60\3\2\2\2\u00a3\u00a4\7?\2\2\u00a4"+
		"\u00a5\7?\2\2\u00a5\62\3\2\2\2\u00a6\u00a7\7#\2\2\u00a7\u00a8\7?\2\2\u00a8"+
		"\64\3\2\2\2\u00a9\u00aa\7>\2\2\u00aa\u00ab\7?\2\2\u00ab\66\3\2\2\2\u00ac"+
		"\u00ad\7@\2\2\u00ad\u00ae\7?\2\2\u00ae8\3\2\2\2\u00af\u00b0\7k\2\2\u00b0"+
		"\u00b1\7p\2\2\u00b1\u00b2\7e\2\2\u00b2\u00b3\7n\2\2\u00b3\u00b4\7w\2\2"+
		"\u00b4\u00b5\7f\2\2\u00b5\u00bd\7g\2\2\u00b6\u00b7\7k\2\2\u00b7\u00b8"+
		"\7o\2\2\u00b8\u00b9\7r\2\2\u00b9\u00ba\7q\2\2\u00ba\u00bb\7t\2\2\u00bb"+
		"\u00bd\7v\2\2\u00bc\u00af\3\2\2\2\u00bc\u00b6\3\2\2\2\u00bd:\3\2\2\2\u00be"+
		"\u00bf\7k\2\2\u00bf\u00c0\7h\2\2\u00c0<\3\2\2\2\u00c1\u00c2\7g\2\2\u00c2"+
		"\u00c3\7n\2\2\u00c3\u00c4\7u\2\2\u00c4\u00c5\7g\2\2\u00c5>\3\2\2\2\u00c6"+
		"\u00c7\7y\2\2\u00c7\u00c8\7j\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7n\2\2"+
		"\u00ca\u00cb\7g\2\2\u00cb@\3\2\2\2\u00cc\u00cd\7h\2\2\u00cd\u00ce\7q\2"+
		"\2\u00ce\u00cf\7t\2\2\u00cfB\3\2\2\2\u00d0\u00d1\7o\2\2\u00d1\u00d2\7"+
		"c\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4\7t\2\2\u00d4\u00d5\7k\2\2\u00d5\u00d6"+
		"\7z\2\2\u00d6D\3\2\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9\7q\2\2\u00d9\u00da"+
		"\7y\2\2\u00da\u00db\7x\2\2\u00db\u00dc\7g\2\2\u00dc\u00dd\7e\2\2\u00dd"+
		"\u00de\7v\2\2\u00de\u00df\7q\2\2\u00df\u00e5\7t\2\2\u00e0\u00e1\7t\2\2"+
		"\u00e1\u00e2\7x\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e5\7e\2\2\u00e4\u00d7"+
		"\3\2\2\2\u00e4\u00e0\3\2\2\2\u00e5F\3\2\2\2\u00e6\u00e7\7e\2\2\u00e7\u00e8"+
		"\7q\2\2\u00e8\u00e9\7n\2\2\u00e9\u00ea\7x\2\2\u00ea\u00eb\7g\2\2\u00eb"+
		"\u00ec\7e\2\2\u00ec\u00ed\7v\2\2\u00ed\u00ee\7q\2\2\u00ee\u00f4\7t\2\2"+
		"\u00ef\u00f0\7e\2\2\u00f0\u00f1\7x\2\2\u00f1\u00f2\7g\2\2\u00f2\u00f4"+
		"\7e\2\2\u00f3\u00e6\3\2\2\2\u00f3\u00ef\3\2\2\2\u00f4H\3\2\2\2\u00f5\u00f6"+
		"\7k\2\2\u00f6\u00f7\7p\2\2\u00f7\u0108\7v\2\2\u00f8\u00f9\7k\2\2\u00f9"+
		"\u00fa\7p\2\2\u00fa\u00fb\7v\2\2\u00fb\u00fc\7\63\2\2\u00fc\u0108\78\2"+
		"\2\u00fd\u00fe\7k\2\2\u00fe\u00ff\7p\2\2\u00ff\u0100\7v\2\2\u0100\u0101"+
		"\7\65\2\2\u0101\u0108\7\64\2\2\u0102\u0103\7k\2\2\u0103\u0104\7p\2\2\u0104"+
		"\u0105\7v\2\2\u0105\u0106\78\2\2\u0106\u0108\7\66\2\2\u0107\u00f5\3\2"+
		"\2\2\u0107\u00f8\3\2\2\2\u0107\u00fd\3\2\2\2\u0107\u0102\3\2\2\2\u0108"+
		"J\3\2\2\2\u0109\u0115\7\62\2\2\u010a\u010c\5W,\2\u010b\u010a\3\2\2\2\u010b"+
		"\u010c\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u0111\t\2\2\2\u010e\u0110\t\3"+
		"\2\2\u010f\u010e\3\2\2\2\u0110\u0113\3\2\2\2\u0111\u010f\3\2\2\2\u0111"+
		"\u0112\3\2\2\2\u0112\u0115\3\2\2\2\u0113\u0111\3\2\2\2\u0114\u0109\3\2"+
		"\2\2\u0114\u010b\3\2\2\2\u0115L\3\2\2\2\u0116\u0117\7h\2\2\u0117\u0118"+
		"\7n\2\2\u0118\u0119\7q\2\2\u0119\u011a\7c\2\2\u011a\u0131\7v\2\2\u011b"+
		"\u011c\7h\2\2\u011c\u011d\7n\2\2\u011d\u011e\7q\2\2\u011e\u011f\7c\2\2"+
		"\u011f\u0120\7v\2\2\u0120\u0121\7\63\2\2\u0121\u0131\78\2\2\u0122\u0123"+
		"\7h\2\2\u0123\u0124\7n\2\2\u0124\u0125\7q\2\2\u0125\u0126\7c\2\2\u0126"+
		"\u0127\7v\2\2\u0127\u0128\7\65\2\2\u0128\u0131\7\64\2\2\u0129\u012a\7"+
		"h\2\2\u012a\u012b\7n\2\2\u012b\u012c\7q\2\2\u012c\u012d\7c\2\2\u012d\u012e"+
		"\7v\2\2\u012e\u012f\78\2\2\u012f\u0131\7\66\2\2\u0130\u0116\3\2\2\2\u0130"+
		"\u011b\3\2\2\2\u0130\u0122\3\2\2\2\u0130\u0129\3\2\2\2\u0131N\3\2\2\2"+
		"\u0132\u0133\7\62\2\2\u0133\u0134\7\60\2\2\u0134\u014b\7\62\2\2\u0135"+
		"\u0137\5W,\2\u0136\u0135\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u0140\3\2\2"+
		"\2\u0138\u013c\t\2\2\2\u0139\u013b\t\3\2\2\u013a\u0139\3\2\2\2\u013b\u013e"+
		"\3\2\2\2\u013c\u013a\3\2\2\2\u013c\u013d\3\2\2\2\u013d\u0141\3\2\2\2\u013e"+
		"\u013c\3\2\2\2\u013f\u0141\7\62\2\2\u0140\u0138\3\2\2\2\u0140\u013f\3"+
		"\2\2\2\u0141\u0142\3\2\2\2\u0142\u0146\7\60\2\2\u0143\u0145\t\3\2\2\u0144"+
		"\u0143\3\2\2\2\u0145\u0148\3\2\2\2\u0146\u0144\3\2\2\2\u0146\u0147\3\2"+
		"\2\2\u0147\u0149\3\2\2\2\u0148\u0146\3\2\2\2\u0149\u014b\t\2\2\2\u014a"+
		"\u0132\3\2\2\2\u014a\u0136\3\2\2\2\u014bP\3\2\2\2\u014c\u014d\7d\2\2\u014d"+
		"\u014e\7q\2\2\u014e\u014f\7q\2\2\u014f\u0150\7n\2\2\u0150R\3\2\2\2\u0151"+
		"\u0152\7v\2\2\u0152\u0153\7t\2\2\u0153\u0154\7w\2\2\u0154\u015b\7g\2\2"+
		"\u0155\u0156\7h\2\2\u0156\u0157\7c\2\2\u0157\u0158\7n\2\2\u0158\u0159"+
		"\7u\2\2\u0159\u015b\7g\2\2\u015a\u0151\3\2\2\2\u015a\u0155\3\2\2\2\u015b"+
		"T\3\2\2\2\u015c\u0160\7$\2\2\u015d\u015f\13\2\2\2\u015e\u015d\3\2\2\2"+
		"\u015f\u0162\3\2\2\2\u0160\u0161\3\2\2\2\u0160\u015e\3\2\2\2\u0161\u0163"+
		"\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u0164\7$\2\2\u0164V\3\2\2\2\u0165\u0166"+
		"\7/\2\2\u0166X\3\2\2\2\u0167\u016b\t\4\2\2\u0168\u016a\t\5\2\2\u0169\u0168"+
		"\3\2\2\2\u016a\u016d\3\2\2\2\u016b\u0169\3\2\2\2\u016b\u016c\3\2\2\2\u016c"+
		"Z\3\2\2\2\u016d\u016b\3\2\2\2\u016e\u0170\t\5\2\2\u016f\u016e\3\2\2\2"+
		"\u0170\u0171\3\2\2\2\u0171\u016f\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0174"+
		"\3\2\2\2\u0173\u0175\7\60\2\2\u0174\u0173\3\2\2\2\u0174\u0175\3\2\2\2"+
		"\u0175\u0179\3\2\2\2\u0176\u0178\t\5\2\2\u0177\u0176\3\2\2\2\u0178\u017b"+
		"\3\2\2\2\u0179\u0177\3\2\2\2\u0179\u017a\3\2\2\2\u017a\\\3\2\2\2\u017b"+
		"\u0179\3\2\2\2\u017c\u017d\7r\2\2\u017d\u017e\7t\2\2\u017e\u017f\7k\2"+
		"\2\u017f\u0180\7p\2\2\u0180\u0181\7v\2\2\u0181^\3\2\2\2\u0182\u0184\t"+
		"\6\2\2\u0183\u0182\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0183\3\2\2\2\u0185"+
		"\u0186\3\2\2\2\u0186\u0187\3\2\2\2\u0187\u0188\b\60\2\2\u0188`\3\2\2\2"+
		"\u0189\u018a\t\7\2\2\u018a\u018b\3\2\2\2\u018b\u018c\b\61\2\2\u018cb\3"+
		"\2\2\2\u018d\u018e\7\61\2\2\u018e\u018f\7,\2\2\u018f\u0193\3\2\2\2\u0190"+
		"\u0192\13\2\2\2\u0191\u0190\3\2\2\2\u0192\u0195\3\2\2\2\u0193\u0194\3"+
		"\2\2\2\u0193\u0191\3\2\2\2\u0194\u0196\3\2\2\2\u0195\u0193\3\2\2\2\u0196"+
		"\u0197\7,\2\2\u0197\u0198\7\61\2\2\u0198\u0199\3\2\2\2\u0199\u019a\b\62"+
		"\2\2\u019ad\3\2\2\2\u019b\u019c\7\61\2\2\u019c\u019d\7\61\2\2\u019d\u01a1"+
		"\3\2\2\2\u019e\u01a0\n\b\2\2\u019f\u019e\3\2\2\2\u01a0\u01a3\3\2\2\2\u01a1"+
		"\u019f\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a2\u01a4\3\2\2\2\u01a3\u01a1\3\2"+
		"\2\2\u01a4\u01a5\b\63\2\2\u01a5f\3\2\2\2\31\2\u00bc\u00e4\u00f3\u0107"+
		"\u010b\u0111\u0114\u0130\u0136\u013c\u0140\u0146\u014a\u015a\u0160\u016b"+
		"\u0171\u0174\u0179\u0185\u0193\u01a1\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}